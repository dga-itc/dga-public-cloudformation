AWSTemplateFormatVersion: '2010-09-09'
Description: 'Private Network Load Balancer with ALB Target Group v1.1 - Added policy parameters'

Metadata:
  Version: "v1.1"
  LastUpdated: "2025-01-25"
  BreakingChanges: "Added policy parameters, updated TG naming"
  UpgradeFrom: "v1.0"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Information"
        Parameters:
          - ProjectName
          - Environment
          - UniqueStackName
          - CostCenter
      - Label:
          default: "Resource Policies"
        Parameters:
          - ResourceDeletionPolicy
          - ResourceUpdateReplacePolicy
      - Label:
          default: "Service Configuration"
        Parameters:
          - LoadBalancerScheme
      - Label:
          default: "Stack Dependencies"
        Parameters:
          - VPCExportStack
          - ALBExportStack
    ParameterLabels:
      ProjectName:
        default: "Project Name"
      Environment:
        default: "Environment"
      UniqueStackName:
        default: "Stack Unique Name"
      CostCenter:
        default: "Cost Center"
      ResourceDeletionPolicy:
        default: "Resource Deletion Policy"
      ResourceUpdateReplacePolicy:
        default: "Resource Update Replace Policy"
      LoadBalancerScheme:
        default: "Load Balancer Scheme"
      VPCExportStack:
        default: "VPC Export Stack Name"
      ALBExportStack:
        default: "ALB Export Stack Name"

Parameters:
  ProjectName:
    Type: String
    Description: "Project identifier (Update requires: Replacement - changes resource names)"
  
  Environment:
    Type: String
    Description: "Environment identifier (Update requires: Replacement - changes resource names)"
    AllowedValues: ["dev", "sit", "uat", "pvt", "pre-prod", "prod"]
  
  UniqueStackName:
    Type: String
    Description: "Unique identifier for this stack (Update requires: Replacement - changes resource names)"
    Default: "nlb-private"

  CostCenter:
    Type: String
    Description: "Cost center for billing (Update requires: No interruption)"
    Default: "IT"

  ResourceDeletionPolicy:
    Type: String
    Description: "Resource deletion policy on stack deletion (Update requires: No interruption)"
    AllowedValues: ["Delete", "Retain", "Snapshot"]
    Default: "Delete"
  
  ResourceUpdateReplacePolicy:
    Type: String
    Description: "Resource update replacement policy during updates (Update requires: No interruption)"
    AllowedValues: ["Delete", "Retain", "Snapshot"]
    Default: "Delete"

  # Stack Dependencies
  VPCExportStack:
    Type: String
    Description: "VPC stack name to import from (Update requires: Some interruption - changes network references)"
    Default: "lab-iac-prod-main-vpc"
  
  ALBExportStack:
    Type: String
    Description: "ALB stack name to import from (Update requires: Replacement - changes target)"
    Default: "lab-iac-prod-alb"

  # Load Balancer Configuration
  LoadBalancerScheme:
    Type: String
    Description: "Load balancer scheme (Update requires: Replacement - creates new NLB)"
    AllowedValues: ["internal", "internet-facing"]
    Default: "internal"

Conditions:
  ShouldRetainOnDelete: !Equals [!Ref ResourceDeletionPolicy, "Retain"]
  ShouldSnapshotOnDelete: !Equals [!Ref ResourceDeletionPolicy, "Snapshot"]
  ShouldRetainOnReplace: !Equals [!Ref ResourceUpdateReplacePolicy, "Retain"]
  ShouldSnapshotOnReplace: !Equals [!Ref ResourceUpdateReplacePolicy, "Snapshot"]

Mappings:
  EnvMap:
    prod: { Short: "Prd" }
    pre-prod: { Short: "Pprd" }
    pvt: { Short: "Pvt" }
    uat: { Short: "Uat" }
    dev: { Short: "Dev" }

Resources:
  # Private Network Load Balancer
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DeletionPolicy: !If [ShouldRetainOnDelete, Retain, Delete]
    UpdateReplacePolicy: !If [ShouldRetainOnReplace, Retain, Delete]
    Properties:
      Name: !Sub
        - "${ProjectName}${EnvShort}-${UniqueStackName}"
        - EnvShort: !FindInMap [EnvMap, !Ref Environment, Short]
      Type: network
      Scheme: !Ref LoadBalancerScheme
      IpAddressType: ipv4
      Subnets:
        - !ImportValue
            Fn::Sub: '${VPCExportStack}-PrivateSubnet1-Id'
        - !ImportValue
            Fn::Sub: '${VPCExportStack}-PrivateSubnet2-Id'
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: CostCenter
          Value: !Ref CostCenter

  # Target Group for ALB
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: NetworkLoadBalancer
    DeletionPolicy: !If [ShouldRetainOnDelete, Retain, Delete]
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-tg-80"
      Port: 80
      Protocol: TCP
      VpcId: !ImportValue
        Fn::Sub: '${VPCExportStack}-Id'
      TargetType: alb
      Targets:
        - Id: !ImportValue
            Fn::Sub: '${ALBExportStack}-Arn'
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-tg-80"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: CostCenter
          Value: !Ref CostCenter

  # HTTP Listener
  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DeletionPolicy: !If [ShouldRetainOnDelete, Retain, Delete]
    UpdateReplacePolicy: !If [ShouldRetainOnReplace, Retain, Delete]
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 80
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerId:
    Description: NLB ID
    Value: !Ref NetworkLoadBalancer
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-Id'

  LoadBalancerArn:
    Description: NLB ARN
    Value: !Ref NetworkLoadBalancer
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-Arn'

  LoadBalancerDNSName:
    Description: NLB DNS Name
    Value: !GetAtt NetworkLoadBalancer.DNSName
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-DNSName'

  LoadBalancerZoneId:
    Description: NLB Hosted Zone ID
    Value: !GetAtt NetworkLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-ZoneId'

  TargetGroupArn:
    Description: Target Group ARN
    Value: !Ref TargetGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-TargetGroup-Arn'

  ListenerHTTPArn:
    Description: HTTP Listener ARN
    Value: !Ref HTTPListener
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-ListenerHTTP-Arn'

  StackName:
    Description: "Stack Name for cross-stack references"
    Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}"
    Export:
      Name: !Sub
        - "${ProjectName}${EnvShort}-${UniqueStackName}"
        - EnvShort: !FindInMap [EnvMap, !Ref Environment, Short]
