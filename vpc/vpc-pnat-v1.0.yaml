AWSTemplateFormatVersion: '2010-09-09'
Description: 'Advanced VPC Stack with Public and Private NAT Gateways, Secondary CIDR, and Database Subnets'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Information"
        Parameters:
          - ProjectName
          - Environment
          - UniqueStackName
      - Label:
          default: "VPC CIDR Configuration"
        Parameters:
          - VpcCidr
          - SecondaryCidr
      - Label:
          default: "Public Subnets"
        Parameters:
          - PublicSubnet1Cidr
          - PublicSubnet2Cidr
      - Label:
          default: "Private Subnets"
        Parameters:
          - PrivateSubnet1Cidr
          - PrivateSubnet2Cidr
      - Label:
          default: "Container Subnets"
        Parameters:
          - ContainerSubnet1Cidr
          - ContainerSubnet2Cidr
      - Label:
          default: "Database Subnets"
        Parameters:
          - DatabaseSubnet1Cidr
          - DatabaseSubnet2Cidr
          - DatabaseSubnet3Cidr
      - Label:
          default: "Stack Dependencies"
        Parameters:
          - EIPExportStack
      - Label:
          default: "Import Configuration"
        Parameters:
          - EIPImportMode
          - EIP1AllocationId
          - EIP2AllocationId
    ParameterLabels:
      ProjectName:
        default: "Project Name"
      Environment:
        default: "Environment"
      UniqueStackName:
        default: "Stack Unique Name"
      VpcCidr:
        default: "VPC CIDR Block"
      SecondaryCidr:
        default: "Secondary CIDR Block"
      EIPExportStack:
        default: "EIP Export Stack Name"
      EIPImportMode:
        default: "EIP Import Mode"

Parameters:
  ProjectName:
    Type: String
    Description: "Project identifier"
  
  Environment:
    Type: String
    Description: "Environment identifier"
    AllowedValues: ["dev", "sit", "uat", "pvt", "pre-prod", "prod"]
  
  UniqueStackName:
    Type: String
    Description: "Unique identifier for this stack"
    Default: "main-vpc"
  
  VpcCidr:
    Type: String
    Default: "10.0.0.0/24"
    Description: "Primary CIDR block for VPC"
  
  SecondaryCidr:
    Type: String
    Default: "100.64.0.0/16"
    Description: "Secondary CIDR block for container/database subnets"
  
  PublicSubnet1Cidr:
    Type: String
    Default: "10.0.0.0/26"
    Description: "CIDR block for public subnet 1"
  
  PublicSubnet2Cidr:
    Type: String
    Default: "10.0.0.64/26"
    Description: "CIDR block for public subnet 2"
  
  PrivateSubnet1Cidr:
    Type: String
    Default: "10.0.0.128/26"
    Description: "CIDR block for private subnet 1"
  
  PrivateSubnet2Cidr:
    Type: String
    Default: "10.0.0.192/26"
    Description: "CIDR block for private subnet 2"

  ContainerSubnet1Cidr:
    Type: String
    Default: "100.64.0.0/19"
    Description: "CIDR block for container subnet 1"
  
  ContainerSubnet2Cidr:
    Type: String
    Default: "100.64.32.0/19"
    Description: "CIDR block for container subnet 2"

  DatabaseSubnet1Cidr:
    Type: String
    Default: "100.64.64.0/19"
    Description: "CIDR block for database subnet 1"
  
  DatabaseSubnet2Cidr:
    Type: String
    Default: "100.64.96.0/19"
    Description: "CIDR block for database subnet 2"

  DatabaseSubnet3Cidr:
    Type: String
    Default: "100.64.128.0/19"
    Description: "CIDR block for database subnet 3"
  
  EIPExportStack:
    Type: String
    Description: "EIP stack name to import from"
    Default: "lab-iac-prod-main-eip"
  
  EIPImportMode:
    Type: String
    Description: "How to get EIP AllocationIds"
    AllowedValues: ["AUTO", "MANUAL"]
    Default: "AUTO"
  
  EIP1AllocationId:
    Type: String
    Description: "EIP 1 Allocation ID (only if EIPImportMode=MANUAL)"
    Default: ""
  
  EIP2AllocationId:
    Type: String
    Description: "EIP 2 Allocation ID (only if EIPImportMode=MANUAL)"
    Default: ""

Conditions:
  UseManualEIP: !Equals [!Ref EIPImportMode, "MANUAL"]

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}"

  # Secondary CIDR
  SecondaryCidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SecondaryCidr

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-igw"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-public-1"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-public-2"

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-private-1"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-private-2"

  # Container Subnets (Secondary CIDR)
  ContainerSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: SecondaryCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref ContainerSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-container-1"

  ContainerSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: SecondaryCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref ContainerSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-container-2"

  # Database Subnets (Secondary CIDR, 3 AZ)
  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: SecondaryCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DatabaseSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-database-1"

  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: SecondaryCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DatabaseSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-database-2"

  DatabaseSubnet3:
    Type: AWS::EC2::Subnet
    DependsOn: SecondaryCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DatabaseSubnet3Cidr
      AvailabilityZone: !Select [2, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-database-3"

  # Public NAT Gateway 1 (AZ1 - for Private Subnets)
  PublicNATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !If
        - UseManualEIP
        - !Ref EIP1AllocationId
        - !ImportValue
            Fn::Sub: '${EIPExportStack}-EIP1-AllocationId'
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-public-nat-gw-1"

  # Private NAT Gateway 1 (AZ1 - for Container Subnets)
  PrivateNATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !If
        - UseManualEIP
        - !Ref EIP2AllocationId
        - !ImportValue
            Fn::Sub: '${EIPExportStack}-EIP2-AllocationId'
      SubnetId: !Ref PrivateSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-private-nat-gw-1"

  # Public NAT Gateway 2 (AZ2 - for Private Subnets)
  PublicNATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !If
        - UseManualEIP
        - !Ref EIP2AllocationId
        - !ImportValue
            Fn::Sub: '${EIPExportStack}-EIP2-AllocationId'
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-public-nat-gw-2"

  # Private NAT Gateway 2 (AZ2 - for Container Subnets)
  PrivateNATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !If
        - UseManualEIP
        - !Ref EIP1AllocationId
        - !ImportValue
            Fn::Sub: '${EIPExportStack}-EIP1-AllocationId'
      SubnetId: !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-private-nat-gw-2"

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-public-rt"

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-private-rt-1"

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-private-rt-2"

  ContainerRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-container-rt-1"

  ContainerRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-container-rt-2"

  DatabaseRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}-database-rt"

  # Routes
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicNATGateway1

  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicNATGateway2

  ContainerRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ContainerRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PrivateNATGateway1

  ContainerRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ContainerRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PrivateNATGateway2

  DatabaseRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DatabaseRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicNATGateway1

  # Route Table Associations - Public
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Route Table Associations - Private (AZ-separated)
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  # Route Table Associations - Container (AZ-separated)
  ContainerSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ContainerSubnet1
      RouteTableId: !Ref ContainerRouteTable1

  ContainerSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ContainerSubnet2
      RouteTableId: !Ref ContainerRouteTable2

  # Route Table Associations - Database (use shared DatabaseRouteTable → NAT1)
  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet1
      RouteTableId: !Ref DatabaseRouteTable

  DatabaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet2
      RouteTableId: !Ref DatabaseRouteTable

  DatabaseSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet3
      RouteTableId: !Ref DatabaseRouteTable

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-Id'

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-PublicSubnet1-Id'

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-PublicSubnet2-Id'

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-PrivateSubnet1-Id'

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-PrivateSubnet2-Id'

  ContainerSubnet1Id:
    Description: Container Subnet 1 ID
    Value: !Ref ContainerSubnet1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-ContainerSubnet1-Id'

  ContainerSubnet2Id:
    Description: Container Subnet 2 ID
    Value: !Ref ContainerSubnet2
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-ContainerSubnet2-Id'

  DatabaseSubnet1Id:
    Description: Database Subnet 1 ID
    Value: !Ref DatabaseSubnet1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-DatabaseSubnet1-Id'

  DatabaseSubnet2Id:
    Description: Database Subnet 2 ID
    Value: !Ref DatabaseSubnet2
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-DatabaseSubnet2-Id'

  DatabaseSubnet3Id:
    Description: Database Subnet 3 ID
    Value: !Ref DatabaseSubnet3
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-DatabaseSubnet3-Id'

  PublicNATGateway1Id:
    Description: Public NAT Gateway 1 ID
    Value: !Ref PublicNATGateway1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-PublicNATGateway1-Id'

  PrivateNATGateway1Id:
    Description: Private NAT Gateway 1 ID
    Value: !Ref PrivateNATGateway1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${UniqueStackName}-PrivateNATGateway1-Id'

  StackName:
    Description: "Stack Name for cross-stack references"
    Value: !Sub "${ProjectName}-${Environment}-${UniqueStackName}"
    Export:
      Name: !Sub "${ProjectName}-${Environment}-${UniqueStackName}"
